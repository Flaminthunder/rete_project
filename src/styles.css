/* src/styles.css */
body {
  overflow: hidden; /* Prevents scrollbars if editor is full screen */
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  background-color: #f0f0f0; /* Light grey background for the page */
}

.App {
  /* You can add app-specific global styles here if needed, but avoid overly broad selectors */
}

/* Rete.js Specific Styles */

/* Node Styling */
.node {
  background: white;
  border: 2px solid #555;
  border-radius: 10px;
  box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2);
  padding-top: 15px;    /* Padding for the title/top area */
  padding-bottom: 15px; /* Padding below the last element (sockets or controls) */
  padding-left: 15px;   /* Padding for the content area left */
  padding-right: 15px;  /* Padding for the content area right */
  box-sizing: border-box; /* Node's own padding and border are within its JS width/height */
  position: relative;
  /* min-width is effectively set by the `width` property in JS for RuleNode/LogicGateNode */
  display: flex;
  flex-direction: column;
  align-items: stretch; /* Make children like controls stretch to available width */
}

.node.selected {
  border-color: #3498db;
  box-shadow: 0 0 12px rgba(52, 152, 219, 0.5);
}

/* Node Label (from super(label)) */
/* This is the non-editable title part. Assumes Rete React preset renders a div with class "title" */
.node > .title {
  font-weight: bold;
  font-size: 1em;
  color: #333;
  margin-bottom: 10px; /* Space below the title before controls/sockets */
  text-align: center;
  cursor: default;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  min-height: 20px; /* Ensure title area has some height even if label is short */
}


/* Socket Styling */
.socket {
  width: 20px;
  height: 20px;
  background: #adadad;
  border: 1px solid #888;
  border-radius: 10px; /* Circular sockets */
  position: absolute;  /* Positioned relative to the node */
  margin-top: -10px;   /* Vertically center (half of height) relative to its calculated `top` */
  z-index: 2;          /* Sockets on top of connection lines */
  box-sizing: border-box;
  cursor: pointer;
}

.socket:hover {
  background: #3498db;
  border-color: #2980b9;
}

.socket.input {
  left: -11px;  /* (socket_width/2 + socket_border_width) to sit on the edge */
}

.socket.output {
  right: -11px; /* (socket_width/2 + socket_border_width) */
}

/* Control Styling (e.g., for InputControl) */
/* This is the container Rete renders for each control (like the text input for node label, or number input) */
.node .control { /* Targeting .control specifically within a .node for higher specificity */
  width: 100%; /* Make the control container take the available width inside node's horizontal padding */
  box-sizing: border-box; /* Crucial: its own padding/border included in its 100% width */
  padding-left: 0;  /* Override any preset horizontal padding */
  padding-right: 0; /* Override any preset horizontal padding */
  /* Keep or adjust vertical padding from your preset or add your own */
  padding-top: 6px; /* Example vertical padding from preset */
  padding-bottom: 6px;/* Example vertical padding from preset */
  font-size: 0.9em;
  margin-top: 5px; /* Optional: space above control group if it's below a title */
}

/* If ClassicPreset.InputControl renders its own label element for the input field */
/* This selector might need adjustment based on the exact HTML structure Rete generates */
.node .control > div > label {
    display: block;
    margin-bottom: 3px;
    color: #555;
    font-size: 0.85em;
}

/* Target the input elements themselves */
/* These selectors aim to cover common structures from Rete's classic preset */
.node .control input[type="text"],
.node .control input[type="number"],
.node .control > div > input[type="text"],
.node .control > div > input[type="number"] {
  display: block;
  width: 100%; /* Input field takes 100% of its immediate parent (the .control div or an inner div) */
  min-width: 0; /* Override browser default min-width for inputs */
  padding: 8px;
  margin: 0; /* Reset margin */
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 0.9em;
  font-family: inherit;
  box-sizing: border-box; /* CRUCIAL: input's padding and border are inside its 100% width */
}

/* Connection Styling (Using Rete default unless customized) */
/* Example:
.connection .main-path {
  stroke-width: 3px;
  stroke: #777;
}
*/

/* Context Menu Styling (Using Rete default unless customized) */
.context-menu {
  background: white;
  border: 1px solid #ccc;
  box-shadow: 2px 2px 5px rgba(0,0,0,0.1);
  padding: 5px 0;
  min-width: 150px;
  z-index: 100; /* Ensure context menu is on top */
}
.context-menu .item {
  padding: 8px 15px;
  cursor: pointer;
}
.context-menu .item:hover {
  background: #f0f0f0;
}
.context-menu .item.disabled {
  color: #aaa;
  cursor: default;
}
.context-menu .divider { /* If your context menu preset uses this class for dividers */
  height: 1px;
  background: #eee;
  margin: 5px 0;
}